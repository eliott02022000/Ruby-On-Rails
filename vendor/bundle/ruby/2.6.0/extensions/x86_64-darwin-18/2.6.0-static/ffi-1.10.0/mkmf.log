"pkg-config --exists libffi"
| pkg-config --libs libffi
=> "-L/usr/local/Cellar/libffi/3.2.1/lib -lffi\n"
"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib     -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc   "
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib     -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -L/usr/local/Cellar/libffi/3.2.1/lib -lffi  "
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

| pkg-config --cflags-only-I libffi
=> "-I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include\n"
| pkg-config --cflags-only-other libffi
=> "\n"
| pkg-config --libs-only-l libffi
=> "-lffi\n"
package configuration for libffi
cflags: 
ldflags: -L/usr/local/Cellar/libffi/3.2.1/lib
libs: -lffi

have_library: checking for ffi_call() in -lffi... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib     -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <ffi.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     int (* volatile tp)(void)=(int (*)(void))&t;
11:     printf("%d", (*tp)());
12:   }
13: 
14:   return 0;
15: }
16: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_call; return !p; }
/* end */

--------------------

have_func: checking for ffi_closure_alloc()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'ffi_closure_alloc'
int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_closure_alloc; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_closure_alloc; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void ffi_closure_alloc();
15: int t(void) { ffi_closure_alloc(); return 0; }
/* end */

--------------------

have_func: checking for ffi_raw_call()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'ffi_raw_call'
int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_raw_call; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_raw_call; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void ffi_raw_call();
15: int t(void) { ffi_raw_call(); return 0; }
/* end */

--------------------

have_func: checking for ffi_prep_raw_closure()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'ffi_prep_raw_closure'
int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_prep_raw_closure; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_prep_raw_closure; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void ffi_prep_raw_closure();
15: int t(void) { ffi_prep_raw_closure(); return 0; }
/* end */

--------------------

have_header: checking for shlwapi.h... -------------------- no

"clang -E -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe   conftest.c -o conftest.i"
conftest.c:3:10: fatal error: 'shlwapi.h' file not found
#include <shlwapi.h>
         ^~~~~~~~~~~
1 error generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <shlwapi.h>
/* end */

--------------------

have_header: checking for ruby/thread.h... -------------------- yes

"clang -E -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe   conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <ruby/thread.h>
/* end */

--------------------

have_func: checking for rb_thread_blocking_region()... -------------------- no

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'rb_thread_blocking_region'
int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_blocking_region; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_blocking_region; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
Undefined symbols for architecture x86_64:
  "_rb_thread_blocking_region", referenced from:
      _t in conftest-c86e47.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void rb_thread_blocking_region();
15: int t(void) { rb_thread_blocking_region(); return 0; }
/* end */

--------------------

have_func: checking for rb_thread_call_with_gvl()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'rb_thread_call_with_gvl'
int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_call_with_gvl; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_call_with_gvl; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void rb_thread_call_with_gvl();
15: int t(void) { rb_thread_call_with_gvl(); return 0; }
/* end */

--------------------

have_func: checking for rb_thread_call_without_gvl()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'rb_thread_call_without_gvl'
int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_call_without_gvl; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_thread_call_without_gvl; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void rb_thread_call_without_gvl();
15: int t(void) { rb_thread_call_without_gvl(); return 0; }
/* end */

--------------------

have_func: checking for ffi_prep_cif_var()... -------------------- yes

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'ffi_prep_cif_var'
int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_prep_cif_var; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_prep_cif_var; return !p; }
/* end */

"clang -o conftest -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/x86_64-darwin18 -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0/ruby/backward -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include/ruby-2.6.0 -I. -I/usr/local/Cellar/libffi/3.2.1/lib/libffi-3.2.1/include -I/Users/eliott.jarmoune/.rbenv/versions/2.6.1/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -pipe  conftest.c  -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib -L. -L/Users/eliott.jarmoune/.rbenv/versions/2.6.1/lib  -fstack-protector-strong -L/usr/local/lib -L/usr/local/Cellar/libffi/3.2.1/lib    -lffi  -lffi -lruby.2.6-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void ffi_prep_cif_var();
15: int t(void) { ffi_prep_cif_var(); return 0; }
/* end */

--------------------

extconf.h is:
/* begin */
 1: #ifndef EXTCONF_H
 2: #define EXTCONF_H
 3: #define HAVE_FFI_CLOSURE_ALLOC 1
 4: #define HAVE_FFI_RAW_CALL 1
 5: #define HAVE_FFI_PREP_RAW_CLOSURE 1
 6: #define HAVE_RAW_API 1
 7: #define HAVE_RUBY_THREAD_H 1
 8: #define HAVE_RB_THREAD_CALL_WITH_GVL 1
 9: #define HAVE_RB_THREAD_CALL_WITHOUT_GVL 1
10: #define HAVE_FFI_PREP_CIF_VAR 1
11: #define RUBY_1_9 1
12: #endif
/* end */

